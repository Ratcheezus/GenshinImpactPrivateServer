// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AbilityInvokeArgument.proto

package emu.grasscutter.net.proto;

public final class AbilityInvokeArgumentOuterClass {
  private AbilityInvokeArgumentOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code AbilityInvokeArgument}
   */
  public enum AbilityInvokeArgument
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ABILITY_NONE = 0;</code>
     */
    ABILITY_NONE(0),
    /**
     * <code>ABILITY_META_MODIFIER_CHANGE = 1;</code>
     */
    ABILITY_META_MODIFIER_CHANGE(1),
    /**
     * <code>ABILITY_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2;</code>
     */
    ABILITY_META_COMMAND_MODIFIER_CHANGE_REQUEST(2),
    /**
     * <code>ABILITY_META_SPECIAL_FLOAT_ARGUMENT = 3;</code>
     */
    ABILITY_META_SPECIAL_FLOAT_ARGUMENT(3),
    /**
     * <code>ABILITY_META_OVERRIDE_PARAM = 4;</code>
     */
    ABILITY_META_OVERRIDE_PARAM(4),
    /**
     * <code>ABILITY_META_CLEAR_OVERRIDE_PARAM = 5;</code>
     */
    ABILITY_META_CLEAR_OVERRIDE_PARAM(5),
    /**
     * <code>ABILITY_META_REINIT_OVERRIDEMAP = 6;</code>
     */
    ABILITY_META_REINIT_OVERRIDEMAP(6),
    /**
     * <code>ABILITY_META_GLOBAL_FLOAT_VALUE = 7;</code>
     */
    ABILITY_META_GLOBAL_FLOAT_VALUE(7),
    /**
     * <code>ABILITY_META_CLEAR_GLOBAL_FLOAT_VALUE = 8;</code>
     */
    ABILITY_META_CLEAR_GLOBAL_FLOAT_VALUE(8),
    /**
     * <code>ABILITY_META_ABILITY_ELEMENT_STRENGTH = 9;</code>
     */
    ABILITY_META_ABILITY_ELEMENT_STRENGTH(9),
    /**
     * <code>ABILITY_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10;</code>
     */
    ABILITY_META_ADD_OR_GET_ABILITY_AND_TRIGGER(10),
    /**
     * <code>ABILITY_META_SET_KILLED_SETATE = 11;</code>
     */
    ABILITY_META_SET_KILLED_SETATE(11),
    /**
     * <code>ABILITY_META_SET_ABILITY_TRIGGER = 12;</code>
     */
    ABILITY_META_SET_ABILITY_TRIGGER(12),
    /**
     * <code>ABILITY_META_ADD_NEW_ABILITY = 13;</code>
     */
    ABILITY_META_ADD_NEW_ABILITY(13),
    /**
     * <code>ABILITY_META_REMOVE_ABILITY = 14;</code>
     */
    ABILITY_META_REMOVE_ABILITY(14),
    /**
     * <code>ABILITY_META_SET_MODIFIER_APPLY_ENTITY = 15;</code>
     */
    ABILITY_META_SET_MODIFIER_APPLY_ENTITY(15),
    /**
     * <code>ABILITY_META_MODIFIER_DURABILITY_CHANGE = 16;</code>
     */
    ABILITY_META_MODIFIER_DURABILITY_CHANGE(16),
    /**
     * <code>ABILITY_META_ELEMENT_REACTION_VISUAL = 17;</code>
     */
    ABILITY_META_ELEMENT_REACTION_VISUAL(17),
    /**
     * <code>ABILITY_META_SET_POSE_PARAMETER = 18;</code>
     */
    ABILITY_META_SET_POSE_PARAMETER(18),
    /**
     * <code>ABILITY_META_UPDATE_BASE_REACTION_DAMAGE = 19;</code>
     */
    ABILITY_META_UPDATE_BASE_REACTION_DAMAGE(19),
    /**
     * <code>ABILITY_META_TRIGGER_ELEMENT_REACTION = 20;</code>
     */
    ABILITY_META_TRIGGER_ELEMENT_REACTION(20),
    /**
     * <code>ABILITY_META_LOSE_HP = 21;</code>
     */
    ABILITY_META_LOSE_HP(21),
    /**
     * <code>ABILITY_ACTION_TRIGGER_ABILITY = 50;</code>
     */
    ABILITY_ACTION_TRIGGER_ABILITY(50),
    /**
     * <code>ABILITY_ACTION_SET_CRASH_DAMAGE = 51;</code>
     */
    ABILITY_ACTION_SET_CRASH_DAMAGE(51),
    /**
     * <code>ABILITY_ACTION_EFFECT = 52;</code>
     */
    ABILITY_ACTION_EFFECT(52),
    /**
     * <code>ABILITY_ACTION_SUMMON = 53;</code>
     */
    ABILITY_ACTION_SUMMON(53),
    /**
     * <code>ABILITY_ACTION_BLINK = 54;</code>
     */
    ABILITY_ACTION_BLINK(54),
    /**
     * <code>ABILITY_ACTION_CREATE_GADGET = 55;</code>
     */
    ABILITY_ACTION_CREATE_GADGET(55),
    /**
     * <code>ABILITY_ACTION_APPLY_LEVEL_MODIFIER = 56;</code>
     */
    ABILITY_ACTION_APPLY_LEVEL_MODIFIER(56),
    /**
     * <code>ABILITY_ACTION_GENERATE_ELEM_BALL = 57;</code>
     */
    ABILITY_ACTION_GENERATE_ELEM_BALL(57),
    /**
     * <code>ABILITY_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE = 58;</code>
     */
    ABILITY_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE(58),
    /**
     * <code>ABILITY_ACTION_SERVER_MONSTER_LOG = 59;</code>
     */
    ABILITY_ACTION_SERVER_MONSTER_LOG(59),
    /**
     * <code>ABILITY_ACTION_CREATE_TILE = 60;</code>
     */
    ABILITY_ACTION_CREATE_TILE(60),
    /**
     * <code>ABILITY_ACTION_DESTROY_TILE = 61;</code>
     */
    ABILITY_ACTION_DESTROY_TILE(61),
    /**
     * <code>ABILITY_ACTION_FIRE_AFTER_IMAGE = 62;</code>
     */
    ABILITY_ACTION_FIRE_AFTER_IMAGE(62),
    /**
     * <code>ABILITY_MIXIN_AVATAR_STEER_BY_CAMERA = 100;</code>
     */
    ABILITY_MIXIN_AVATAR_STEER_BY_CAMERA(100),
    /**
     * <code>ABILITY_MIXIN_MONSTER_DEFEND = 101;</code>
     */
    ABILITY_MIXIN_MONSTER_DEFEND(101),
    /**
     * <code>ABILITY_MIXIN_WIND_ZONE = 102;</code>
     */
    ABILITY_MIXIN_WIND_ZONE(102),
    /**
     * <code>ABILITY_MIXIN_COST_STAMINA = 103;</code>
     */
    ABILITY_MIXIN_COST_STAMINA(103),
    /**
     * <code>ABILITY_MIXIN_ELITE_SHIELD = 104;</code>
     */
    ABILITY_MIXIN_ELITE_SHIELD(104),
    /**
     * <code>ABILITY_MIXIN_ELEMENT_SHIELD = 105;</code>
     */
    ABILITY_MIXIN_ELEMENT_SHIELD(105),
    /**
     * <code>ABILITY_MIXIN_GLOBAL_SHIELD = 106;</code>
     */
    ABILITY_MIXIN_GLOBAL_SHIELD(106),
    /**
     * <code>ABILITY_MIXIN_SHIELD_BAR = 107;</code>
     */
    ABILITY_MIXIN_SHIELD_BAR(107),
    /**
     * <code>ABILITY_MIXIN_WIND_SEED_SPAWNER = 108;</code>
     */
    ABILITY_MIXIN_WIND_SEED_SPAWNER(108),
    /**
     * <code>ABILITY_MIXIN_DO_ACTION_BY_ELEMENT_REACTION = 109;</code>
     */
    ABILITY_MIXIN_DO_ACTION_BY_ELEMENT_REACTION(109),
    /**
     * <code>ABILITY_MIXIN_FIELD_ENTITY_COUNT_CHANGE = 110;</code>
     */
    ABILITY_MIXIN_FIELD_ENTITY_COUNT_CHANGE(110),
    /**
     * <code>ABILITY_MIXIN_SCENE_PROP_SYNC = 111;</code>
     */
    ABILITY_MIXIN_SCENE_PROP_SYNC(111),
    /**
     * <code>ABILITY_MIXIN_WIDGET_MP_SUPPORT = 112;</code>
     */
    ABILITY_MIXIN_WIDGET_MP_SUPPORT(112),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ABILITY_NONE = 0;</code>
     */
    public static final int ABILITY_NONE_VALUE = 0;
    /**
     * <code>ABILITY_META_MODIFIER_CHANGE = 1;</code>
     */
    public static final int ABILITY_META_MODIFIER_CHANGE_VALUE = 1;
    /**
     * <code>ABILITY_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2;</code>
     */
    public static final int ABILITY_META_COMMAND_MODIFIER_CHANGE_REQUEST_VALUE = 2;
    /**
     * <code>ABILITY_META_SPECIAL_FLOAT_ARGUMENT = 3;</code>
     */
    public static final int ABILITY_META_SPECIAL_FLOAT_ARGUMENT_VALUE = 3;
    /**
     * <code>ABILITY_META_OVERRIDE_PARAM = 4;</code>
     */
    public static final int ABILITY_META_OVERRIDE_PARAM_VALUE = 4;
    /**
     * <code>ABILITY_META_CLEAR_OVERRIDE_PARAM = 5;</code>
     */
    public static final int ABILITY_META_CLEAR_OVERRIDE_PARAM_VALUE = 5;
    /**
     * <code>ABILITY_META_REINIT_OVERRIDEMAP = 6;</code>
     */
    public static final int ABILITY_META_REINIT_OVERRIDEMAP_VALUE = 6;
    /**
     * <code>ABILITY_META_GLOBAL_FLOAT_VALUE = 7;</code>
     */
    public static final int ABILITY_META_GLOBAL_FLOAT_VALUE_VALUE = 7;
    /**
     * <code>ABILITY_META_CLEAR_GLOBAL_FLOAT_VALUE = 8;</code>
     */
    public static final int ABILITY_META_CLEAR_GLOBAL_FLOAT_VALUE_VALUE = 8;
    /**
     * <code>ABILITY_META_ABILITY_ELEMENT_STRENGTH = 9;</code>
     */
    public static final int ABILITY_META_ABILITY_ELEMENT_STRENGTH_VALUE = 9;
    /**
     * <code>ABILITY_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10;</code>
     */
    public static final int ABILITY_META_ADD_OR_GET_ABILITY_AND_TRIGGER_VALUE = 10;
    /**
     * <code>ABILITY_META_SET_KILLED_SETATE = 11;</code>
     */
    public static final int ABILITY_META_SET_KILLED_SETATE_VALUE = 11;
    /**
     * <code>ABILITY_META_SET_ABILITY_TRIGGER = 12;</code>
     */
    public static final int ABILITY_META_SET_ABILITY_TRIGGER_VALUE = 12;
    /**
     * <code>ABILITY_META_ADD_NEW_ABILITY = 13;</code>
     */
    public static final int ABILITY_META_ADD_NEW_ABILITY_VALUE = 13;
    /**
     * <code>ABILITY_META_REMOVE_ABILITY = 14;</code>
     */
    public static final int ABILITY_META_REMOVE_ABILITY_VALUE = 14;
    /**
     * <code>ABILITY_META_SET_MODIFIER_APPLY_ENTITY = 15;</code>
     */
    public static final int ABILITY_META_SET_MODIFIER_APPLY_ENTITY_VALUE = 15;
    /**
     * <code>ABILITY_META_MODIFIER_DURABILITY_CHANGE = 16;</code>
     */
    public static final int ABILITY_META_MODIFIER_DURABILITY_CHANGE_VALUE = 16;
    /**
     * <code>ABILITY_META_ELEMENT_REACTION_VISUAL = 17;</code>
     */
    public static final int ABILITY_META_ELEMENT_REACTION_VISUAL_VALUE = 17;
    /**
     * <code>ABILITY_META_SET_POSE_PARAMETER = 18;</code>
     */
    public static final int ABILITY_META_SET_POSE_PARAMETER_VALUE = 18;
    /**
     * <code>ABILITY_META_UPDATE_BASE_REACTION_DAMAGE = 19;</code>
     */
    public static final int ABILITY_META_UPDATE_BASE_REACTION_DAMAGE_VALUE = 19;
    /**
     * <code>ABILITY_META_TRIGGER_ELEMENT_REACTION = 20;</code>
     */
    public static final int ABILITY_META_TRIGGER_ELEMENT_REACTION_VALUE = 20;
    /**
     * <code>ABILITY_META_LOSE_HP = 21;</code>
     */
    public static final int ABILITY_META_LOSE_HP_VALUE = 21;
    /**
     * <code>ABILITY_ACTION_TRIGGER_ABILITY = 50;</code>
     */
    public static final int ABILITY_ACTION_TRIGGER_ABILITY_VALUE = 50;
    /**
     * <code>ABILITY_ACTION_SET_CRASH_DAMAGE = 51;</code>
     */
    public static final int ABILITY_ACTION_SET_CRASH_DAMAGE_VALUE = 51;
    /**
     * <code>ABILITY_ACTION_EFFECT = 52;</code>
     */
    public static final int ABILITY_ACTION_EFFECT_VALUE = 52;
    /**
     * <code>ABILITY_ACTION_SUMMON = 53;</code>
     */
    public static final int ABILITY_ACTION_SUMMON_VALUE = 53;
    /**
     * <code>ABILITY_ACTION_BLINK = 54;</code>
     */
    public static final int ABILITY_ACTION_BLINK_VALUE = 54;
    /**
     * <code>ABILITY_ACTION_CREATE_GADGET = 55;</code>
     */
    public static final int ABILITY_ACTION_CREATE_GADGET_VALUE = 55;
    /**
     * <code>ABILITY_ACTION_APPLY_LEVEL_MODIFIER = 56;</code>
     */
    public static final int ABILITY_ACTION_APPLY_LEVEL_MODIFIER_VALUE = 56;
    /**
     * <code>ABILITY_ACTION_GENERATE_ELEM_BALL = 57;</code>
     */
    public static final int ABILITY_ACTION_GENERATE_ELEM_BALL_VALUE = 57;
    /**
     * <code>ABILITY_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE = 58;</code>
     */
    public static final int ABILITY_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE_VALUE = 58;
    /**
     * <code>ABILITY_ACTION_SERVER_MONSTER_LOG = 59;</code>
     */
    public static final int ABILITY_ACTION_SERVER_MONSTER_LOG_VALUE = 59;
    /**
     * <code>ABILITY_ACTION_CREATE_TILE = 60;</code>
     */
    public static final int ABILITY_ACTION_CREATE_TILE_VALUE = 60;
    /**
     * <code>ABILITY_ACTION_DESTROY_TILE = 61;</code>
     */
    public static final int ABILITY_ACTION_DESTROY_TILE_VALUE = 61;
    /**
     * <code>ABILITY_ACTION_FIRE_AFTER_IMAGE = 62;</code>
     */
    public static final int ABILITY_ACTION_FIRE_AFTER_IMAGE_VALUE = 62;
    /**
     * <code>ABILITY_MIXIN_AVATAR_STEER_BY_CAMERA = 100;</code>
     */
    public static final int ABILITY_MIXIN_AVATAR_STEER_BY_CAMERA_VALUE = 100;
    /**
     * <code>ABILITY_MIXIN_MONSTER_DEFEND = 101;</code>
     */
    public static final int ABILITY_MIXIN_MONSTER_DEFEND_VALUE = 101;
    /**
     * <code>ABILITY_MIXIN_WIND_ZONE = 102;</code>
     */
    public static final int ABILITY_MIXIN_WIND_ZONE_VALUE = 102;
    /**
     * <code>ABILITY_MIXIN_COST_STAMINA = 103;</code>
     */
    public static final int ABILITY_MIXIN_COST_STAMINA_VALUE = 103;
    /**
     * <code>ABILITY_MIXIN_ELITE_SHIELD = 104;</code>
     */
    public static final int ABILITY_MIXIN_ELITE_SHIELD_VALUE = 104;
    /**
     * <code>ABILITY_MIXIN_ELEMENT_SHIELD = 105;</code>
     */
    public static final int ABILITY_MIXIN_ELEMENT_SHIELD_VALUE = 105;
    /**
     * <code>ABILITY_MIXIN_GLOBAL_SHIELD = 106;</code>
     */
    public static final int ABILITY_MIXIN_GLOBAL_SHIELD_VALUE = 106;
    /**
     * <code>ABILITY_MIXIN_SHIELD_BAR = 107;</code>
     */
    public static final int ABILITY_MIXIN_SHIELD_BAR_VALUE = 107;
    /**
     * <code>ABILITY_MIXIN_WIND_SEED_SPAWNER = 108;</code>
     */
    public static final int ABILITY_MIXIN_WIND_SEED_SPAWNER_VALUE = 108;
    /**
     * <code>ABILITY_MIXIN_DO_ACTION_BY_ELEMENT_REACTION = 109;</code>
     */
    public static final int ABILITY_MIXIN_DO_ACTION_BY_ELEMENT_REACTION_VALUE = 109;
    /**
     * <code>ABILITY_MIXIN_FIELD_ENTITY_COUNT_CHANGE = 110;</code>
     */
    public static final int ABILITY_MIXIN_FIELD_ENTITY_COUNT_CHANGE_VALUE = 110;
    /**
     * <code>ABILITY_MIXIN_SCENE_PROP_SYNC = 111;</code>
     */
    public static final int ABILITY_MIXIN_SCENE_PROP_SYNC_VALUE = 111;
    /**
     * <code>ABILITY_MIXIN_WIDGET_MP_SUPPORT = 112;</code>
     */
    public static final int ABILITY_MIXIN_WIDGET_MP_SUPPORT_VALUE = 112;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AbilityInvokeArgument valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AbilityInvokeArgument forNumber(int value) {
      switch (value) {
        case 0: return ABILITY_NONE;
        case 1: return ABILITY_META_MODIFIER_CHANGE;
        case 2: return ABILITY_META_COMMAND_MODIFIER_CHANGE_REQUEST;
        case 3: return ABILITY_META_SPECIAL_FLOAT_ARGUMENT;
        case 4: return ABILITY_META_OVERRIDE_PARAM;
        case 5: return ABILITY_META_CLEAR_OVERRIDE_PARAM;
        case 6: return ABILITY_META_REINIT_OVERRIDEMAP;
        case 7: return ABILITY_META_GLOBAL_FLOAT_VALUE;
        case 8: return ABILITY_META_CLEAR_GLOBAL_FLOAT_VALUE;
        case 9: return ABILITY_META_ABILITY_ELEMENT_STRENGTH;
        case 10: return ABILITY_META_ADD_OR_GET_ABILITY_AND_TRIGGER;
        case 11: return ABILITY_META_SET_KILLED_SETATE;
        case 12: return ABILITY_META_SET_ABILITY_TRIGGER;
        case 13: return ABILITY_META_ADD_NEW_ABILITY;
        case 14: return ABILITY_META_REMOVE_ABILITY;
        case 15: return ABILITY_META_SET_MODIFIER_APPLY_ENTITY;
        case 16: return ABILITY_META_MODIFIER_DURABILITY_CHANGE;
        case 17: return ABILITY_META_ELEMENT_REACTION_VISUAL;
        case 18: return ABILITY_META_SET_POSE_PARAMETER;
        case 19: return ABILITY_META_UPDATE_BASE_REACTION_DAMAGE;
        case 20: return ABILITY_META_TRIGGER_ELEMENT_REACTION;
        case 21: return ABILITY_META_LOSE_HP;
        case 50: return ABILITY_ACTION_TRIGGER_ABILITY;
        case 51: return ABILITY_ACTION_SET_CRASH_DAMAGE;
        case 52: return ABILITY_ACTION_EFFECT;
        case 53: return ABILITY_ACTION_SUMMON;
        case 54: return ABILITY_ACTION_BLINK;
        case 55: return ABILITY_ACTION_CREATE_GADGET;
        case 56: return ABILITY_ACTION_APPLY_LEVEL_MODIFIER;
        case 57: return ABILITY_ACTION_GENERATE_ELEM_BALL;
        case 58: return ABILITY_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE;
        case 59: return ABILITY_ACTION_SERVER_MONSTER_LOG;
        case 60: return ABILITY_ACTION_CREATE_TILE;
        case 61: return ABILITY_ACTION_DESTROY_TILE;
        case 62: return ABILITY_ACTION_FIRE_AFTER_IMAGE;
        case 100: return ABILITY_MIXIN_AVATAR_STEER_BY_CAMERA;
        case 101: return ABILITY_MIXIN_MONSTER_DEFEND;
        case 102: return ABILITY_MIXIN_WIND_ZONE;
        case 103: return ABILITY_MIXIN_COST_STAMINA;
        case 104: return ABILITY_MIXIN_ELITE_SHIELD;
        case 105: return ABILITY_MIXIN_ELEMENT_SHIELD;
        case 106: return ABILITY_MIXIN_GLOBAL_SHIELD;
        case 107: return ABILITY_MIXIN_SHIELD_BAR;
        case 108: return ABILITY_MIXIN_WIND_SEED_SPAWNER;
        case 109: return ABILITY_MIXIN_DO_ACTION_BY_ELEMENT_REACTION;
        case 110: return ABILITY_MIXIN_FIELD_ENTITY_COUNT_CHANGE;
        case 111: return ABILITY_MIXIN_SCENE_PROP_SYNC;
        case 112: return ABILITY_MIXIN_WIDGET_MP_SUPPORT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AbilityInvokeArgument>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AbilityInvokeArgument> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AbilityInvokeArgument>() {
            public AbilityInvokeArgument findValueByNumber(int number) {
              return AbilityInvokeArgument.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.AbilityInvokeArgumentOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final AbilityInvokeArgument[] VALUES = values();

    public static AbilityInvokeArgument valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AbilityInvokeArgument(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AbilityInvokeArgument)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033AbilityInvokeArgument.proto*\206\016\n\025Abilit" +
      "yInvokeArgument\022\020\n\014ABILITY_NONE\020\000\022 \n\034ABI" +
      "LITY_META_MODIFIER_CHANGE\020\001\0220\n,ABILITY_M" +
      "ETA_COMMAND_MODIFIER_CHANGE_REQUEST\020\002\022\'\n" +
      "#ABILITY_META_SPECIAL_FLOAT_ARGUMENT\020\003\022\037" +
      "\n\033ABILITY_META_OVERRIDE_PARAM\020\004\022%\n!ABILI" +
      "TY_META_CLEAR_OVERRIDE_PARAM\020\005\022#\n\037ABILIT" +
      "Y_META_REINIT_OVERRIDEMAP\020\006\022#\n\037ABILITY_M" +
      "ETA_GLOBAL_FLOAT_VALUE\020\007\022)\n%ABILITY_META" +
      "_CLEAR_GLOBAL_FLOAT_VALUE\020\010\022)\n%ABILITY_M" +
      "ETA_ABILITY_ELEMENT_STRENGTH\020\t\022/\n+ABILIT" +
      "Y_META_ADD_OR_GET_ABILITY_AND_TRIGGER\020\n\022" +
      "\"\n\036ABILITY_META_SET_KILLED_SETATE\020\013\022$\n A" +
      "BILITY_META_SET_ABILITY_TRIGGER\020\014\022 \n\034ABI" +
      "LITY_META_ADD_NEW_ABILITY\020\r\022\037\n\033ABILITY_M" +
      "ETA_REMOVE_ABILITY\020\016\022*\n&ABILITY_META_SET" +
      "_MODIFIER_APPLY_ENTITY\020\017\022+\n\'ABILITY_META" +
      "_MODIFIER_DURABILITY_CHANGE\020\020\022(\n$ABILITY" +
      "_META_ELEMENT_REACTION_VISUAL\020\021\022#\n\037ABILI" +
      "TY_META_SET_POSE_PARAMETER\020\022\022,\n(ABILITY_" +
      "META_UPDATE_BASE_REACTION_DAMAGE\020\023\022)\n%AB" +
      "ILITY_META_TRIGGER_ELEMENT_REACTION\020\024\022\030\n" +
      "\024ABILITY_META_LOSE_HP\020\025\022\"\n\036ABILITY_ACTIO" +
      "N_TRIGGER_ABILITY\0202\022#\n\037ABILITY_ACTION_SE" +
      "T_CRASH_DAMAGE\0203\022\031\n\025ABILITY_ACTION_EFFEC" +
      "T\0204\022\031\n\025ABILITY_ACTION_SUMMON\0205\022\030\n\024ABILIT" +
      "Y_ACTION_BLINK\0206\022 \n\034ABILITY_ACTION_CREAT" +
      "E_GADGET\0207\022\'\n#ABILITY_ACTION_APPLY_LEVEL" +
      "_MODIFIER\0208\022%\n!ABILITY_ACTION_GENERATE_E" +
      "LEM_BALL\0209\0220\n,ABILITY_ACTION_SET_RANDOM_" +
      "OVERRIDE_MAP_VALUE\020:\022%\n!ABILITY_ACTION_S" +
      "ERVER_MONSTER_LOG\020;\022\036\n\032ABILITY_ACTION_CR" +
      "EATE_TILE\020<\022\037\n\033ABILITY_ACTION_DESTROY_TI" +
      "LE\020=\022#\n\037ABILITY_ACTION_FIRE_AFTER_IMAGE\020" +
      ">\022(\n$ABILITY_MIXIN_AVATAR_STEER_BY_CAMER" +
      "A\020d\022 \n\034ABILITY_MIXIN_MONSTER_DEFEND\020e\022\033\n" +
      "\027ABILITY_MIXIN_WIND_ZONE\020f\022\036\n\032ABILITY_MI" +
      "XIN_COST_STAMINA\020g\022\036\n\032ABILITY_MIXIN_ELIT" +
      "E_SHIELD\020h\022 \n\034ABILITY_MIXIN_ELEMENT_SHIE" +
      "LD\020i\022\037\n\033ABILITY_MIXIN_GLOBAL_SHIELD\020j\022\034\n" +
      "\030ABILITY_MIXIN_SHIELD_BAR\020k\022#\n\037ABILITY_M" +
      "IXIN_WIND_SEED_SPAWNER\020l\022/\n+ABILITY_MIXI" +
      "N_DO_ACTION_BY_ELEMENT_REACTION\020m\022+\n\'ABI" +
      "LITY_MIXIN_FIELD_ENTITY_COUNT_CHANGE\020n\022!" +
      "\n\035ABILITY_MIXIN_SCENE_PROP_SYNC\020o\022#\n\037ABI" +
      "LITY_MIXIN_WIDGET_MP_SUPPORT\020pB\033\n\031emu.gr" +
      "asscutter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
